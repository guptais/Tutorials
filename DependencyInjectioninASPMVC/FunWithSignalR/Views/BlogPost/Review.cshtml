@model FunWithSignalR.Domain.Model.BlogPost
@{
    ViewBag.Title = "Review";
}
<h2>
    Review</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="../../Scripts/diff_match_patch.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.6.4.min.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.signalR.min.js" type="text/javascript"></script>
<script src="../../Scripts/json2.min.js" type="text/javascript"></script>
<script src="/signalr/hubs" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>BlogPost</legend>
        @Html.HiddenFor(model => model.Id)
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Post)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Post)
            @Html.ValidationMessageFor(model => model.Post)
        </div>
        <p>
            <input type="submit" value="Save" />
            <input id="sessinId" value="@Session.SessionID" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">

    $(function () {
        // Proxy created on the fly
        var blog = $.connection.blogHub;
        //Create instance of the diff-match-patch javascript class
        var dmp = new diff_match_patch();

        // Declare a function on the blog hub so the server can invoke it
        blog.addMessage = function (message, sessnId, id) {

            var sessId = $('#sessinId').val();
            var blogId = $('#Id').val();

            if (sessId != sessnId && (blogId==id)) {
                dmp.Match_Distance = 1000;
                dmp.Match_Threshold = 0.5;
                dmp.Patch_DeleteThreshold = 0.5;

                var patches = dmp.patch_make($('#Post').val(), message);
                var results = dmp.patch_apply(patches, $('#Post').val());
                $('#Post').val(results[0]);
            }
        };

        // Start the connection
        $.connection.hub.start();

        $("#Post").keyup(function (event) {
            var sessId = $("#sessinId").val();
            blog.send($("#Post").val(), sessId, $("#Id").val());
        });
    });
</script>
